<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css"
        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
   <link rel="stylesheet" href="css/java_styles.css">
    <link rel="stylesheet" href="css/java_prism.css">
    <title>Java Constructors</title>
</head>

<body>
    {{>java_header}}
    <div class="wrapper">
        {{>java_menu}}
        <div class="content card" id="main_content">
            <h1 style="font-family: 'Calistoga', cursive;">Java</h1>
            <h3>Constructors</h3>
            <p>A constructor is a special method in a Java class with the same name as the class itself.
                It is called automatically when an object of the class is created using the new keyword.
            </p>
            <p>The primary purpose of constructors is to initialize the attributes (instance variables) of an object when it is created.
                Constructors ensure that objects are in a valid and consistent state from the moment they are instantiated.</p>
            <h4>Default Constructors</h4>
            <p>If a class does not explicitly define any constructors, Java provides a default constructor with no parameters.
                This default constructor initializes the attributes with default values (e.g., 0 for numeric types, null for objects).
                Once you define a custom constructor, the default constructor is no longer provided automatically.</p>
                <h4>Parameterized constructor</h4>
                <p>
                    Parameterized constructors accept arguments (parameters) that are used to initialize the object's attributes.
These constructors allow you to specify initial values for an object's attributes during object creation.
                </p>
            <h4>Constructor overloading</h4>
            <p>Java allows you to define multiple constructors in a class, each with a different set of parameters. This is known as constructor overloading.
                Constructor overloading provides flexibility when creating objects, as you can choose the appropriate constructor based on your initialization requirements.</p>
                <hr>
            <h3>Example</h3>
            <div class="code_container">
                <div class="code_wrapper">
                    <pre>
                        <code id="code" class="language-Java">
                            class Person {
                                // Instance variables
                                private String name;
                                private int age;
                            
                                // Default constructor
                                public Person() {
                                    name = "Harvey";
                                    age = 0;
                                }
                            
                                // Parameterized constructor with name
                                public Person(String name) {
                                    this.name = name;
                                    age = 0;
                                }
                            
                                // Parameterized constructor with name and age
                                public Person(String name, int age) {
                                    this.name = name;
                                    this.age = age;
                                }
                            
                                // Method to display person's details
                                public void display() {
                                    System.out.println("Name: " + name);
                                    System.out.println("Age: " + age);
                                }
                            }
                            
                            
                            public class MyClass {
                                public static void main(String[] args) {
                                    // Creating objects using different constructors
                                    Person person1 = new Person();                    // Default constructor
                                    Person person2 = new Person("Rachel Zane");            // Parameterized constructor with name
                                    Person person3 = new Person("Mike Ross", 25);          // Parameterized constructor with name and age
                            
                                    // Displaying person details
                                    System.out.println("Person 1:");
                                    person1.display();
                            
                                    System.out.println("\nPerson 2:");
                                    person2.display();
                            
                                    System.out.println("\nPerson 3:");
                                    person3.display();
                                }
                            }
                        </code>
                    </pre>
                </div>
            </div>
            <button type="button" class="btn btn-primary" data-toggle="modal" data-target=".bd-example-modal-lg">Try it
                out >></button>

            <div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel"
                aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div data-pym-src="https://www.jdoodle.com/embed/v0/6AGL"></div>
                    </div>
                </div>
            </div>
            <div class="page_change">
                <a class="btn btn-primary prev" href="/java_classes">Prev</a>
                <a class="btn btn-primary next" href="/java_inheritence">Next</a>
            </div>
        </div>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
            crossorigin="anonymous"></script>
        <script src="https://www.jdoodle.com/assets/jdoodle-pym.min.js" type="text/Javascript"></script>
        <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
            integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
            crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js"
            integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
            crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js"
            integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
            crossorigin="anonymous"></script>
        </script>
        <script src="js/chatbot.js"></script>
        <script src="js/java_prism.js"></script>
        <script>
            function show_beginner() {
                document.getElementById('Beginner').style.display = 'block';
                document.getElementById('down_b').style.display = 'none';
                document.getElementById('up_b').style.display = 'inline';
            }
            function hide_beginner() {
                document.getElementById('Beginner').style.display = 'none';
                document.getElementById('down_b').style.display = 'inline';
                document.getElementById('up_b').style.display = 'none';
            }
            function show_intermediate() {
                document.getElementById('Intermediate').style.display = 'block';
                document.getElementById('down_i').style.display = 'none';
                document.getElementById('up_i').style.display = 'inline';
            }
            function hide_intermediate() {
                document.getElementById('Intermediate').style.display = 'none';
                document.getElementById('down_i').style.display = 'inline';
                document.getElementById('up_i').style.display = 'none';
            }
            function show_ds() {
                document.getElementById('data_structures').style.display = 'block';
                document.getElementById('down_ds').style.display = 'none';
                document.getElementById('up_ds').style.display = 'inline';
            }
            function hide_ds() {
                document.getElementById('data_structures').style.display = 'none';
                document.getElementById('down_ds').style.display = 'inline';
                document.getElementById('up_ds').style.display = 'none';
            }
            function show_oops() {
                document.getElementById('OOPS').style.display = 'block';
                document.getElementById('down_oops').style.display = 'none';
                document.getElementById('up_oops').style.display = 'inline';
            }
            function hide_oops() {
                document.getElementById('OOPS').style.display = 'none';
                document.getElementById('down_oops').style.display = 'inline';
                document.getElementById('up_oops').style.display = 'none';
            }
            function show() {
                document.getElementById('menu').style.transform = 'translate(260px)'
                document.getElementById('hide').style.display = 'block';
                document.getElementById('show').style.display = 'none';
                document.getElementById('main_content').style.marginLeft = '260px'
            }
            function hide() {
                document.getElementById('menu').style.transform = 'translate(-250px)';
                document.getElementById('show').style.display = 'block';
                document.getElementById('main_content').style.marginLeft = '0px'
            }
        </script>
</body>

</html>